
#  copy the contents for a file
alias cf="pbcopy <"

# cd commands
alias ..="cd .."
alias ....="cd ../../.."
alias ...="cd ../.."

# find file 
alias f="find . |grep"

# list processes
alias listp="ps -aef | grep"

# untar
alias untar="tar -zxvf "

# size of all directories
alias dz="du -sh *"

# find command in history
alias gh="history|grep"

# git
alias ga="git add .; git status"
alias gc="git commit -m"
alias gnb="git checkout -b"


# function to create a new environment using pyenv and virtualenv
# will assume that if given 2 arguments the first is the python version and the second argument 
# the desired named of the environment
# if only one argument is passed its assumed to be the desired named of the environemnt 
# and the latest stable python environemnt will be used.
function cv {
    
    # parsing arguments
    if (( $# > 1)); then
        py_vers="$1"
        env_name="$2"
    else
        py_vers=""
        env_name="$1"
    fi

    # if we do not pass python version we fetch the latest python version
    if [ -z "$py_vers" ]; then
        py_vers=$(pyenv install --list | grep --extended-regexp "^\s*[0-9][0-9.]*[0-9]\s*$" | tail -1 | xargs)
    fi        

    # look for the version in the installed python version
    found_version=$(pyenv versions | grep --extended-regex "\d.\d+.\d+" | grep "$py_vers" | xargs)

    # # if we dont find a version we install the version
    if [ -z "$found_version" ]; then
        # because some issues with mac OS and pyenv install x.x.x we use this workaround ( see issue here https://github.com/pyenv/pyenv/issues/1740)
        CFLAGS="-I$(brew --prefix openssl)/include -I$(brew --prefix bzip2)/include -I$(brew --prefix readline)/include -I$(xcrun --show-sdk-path)/usr/include";
        LDFLAGS="-L$(brew --prefix openssl)/lib -L$(brew --prefix readline)/lib -L$(brew --prefix zlib)/lib -L$(brew --prefix bzip2)/lib";
        pyenv install --patch "$py_vers" < <(curl -sSL https://github.com/python/cpython/commit/8ea6353.patch\?full_index\=1);
    fi

    pyenv virtualenv "$py_vers" "$env_name"
}
